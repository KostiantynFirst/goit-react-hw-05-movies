{"version":3,"file":"static/js/499.68c2d74f.chunk.js","mappings":"sRAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAWC,mCAEJC,EAAiB,mCAAG,6GAGXH,EAAAA,EAAAA,IAAA,sBACO,CACnBI,OAAQ,CACJC,QAASJ,KANU,cAGvBK,EAHuB,yBAUvBA,GAVuB,gCAY7BC,QAAQC,IAAI,QAAZ,MAZ6B,yDAAH,qDAgBjBC,EAAa,mCAAG,WAAOC,GAAP,gGAEPV,EAAAA,EAAAA,IAAA,gBAAmBU,GAAW,CAC9CN,OAAQ,CACNC,QAASJ,KAJY,cAEnBK,EAFmB,yBAOlBA,GAPkB,gCAUzBC,QAAQC,IAAI,QAAZ,MAVyB,yDAAH,sDAgBbG,EAAc,mCAAG,WAAOC,GAAP,gGAERZ,EAAAA,EAAAA,IAAA,eAA0B,CAC1CI,OAAQ,CACNC,QAASJ,EACTY,SAAU,QACVC,MAAOF,EACPG,eAAe,EACfC,KAAM,KARgB,cAEpBV,EAFoB,yBAWnBA,GAXmB,gCAcxBC,QAAQC,IAAI,QAAZ,MAdwB,yDAAH,sDAkBdS,EAAO,mCAAG,WAAOP,GAAP,gGAEDV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,YAAsC,CACtDN,OAAQ,CACNC,QAASJ,EACTY,SAAU,WALK,cAEbP,EAFa,yBAQZA,GARY,gCAUnBC,QAAQC,IAAI,QAAZ,MAVmB,yDAAH,qD,0KCpDPU,EAAcC,EAAAA,GAAAA,IAAH,4EAMXC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,2JASRG,EAAUH,EAAAA,GAAAA,IAAH,6FAMPI,EAAgBJ,EAAAA,GAAAA,GAAH,+HAUbK,GAAeL,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,6I,SCuDzB,EAnFqB,WAAO,IAAD,IAEvB,GAAwCM,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,aAAC,EAAgBC,MACxCvB,GAAYwB,EAAAA,EAAAA,MAAZxB,QA0BR,OAvBAyB,EAAAA,EAAAA,YAAU,WACN,GAAIzB,EAAJ,CAIA,IAAM0B,EAAe,mCAAG,qGACF3B,EAAAA,EAAAA,IAAcC,GADZ,UAEI,KADlBJ,EADc,QAEZ+B,KAAKC,OAFO,iDAKpBX,EAAgBrB,EAAI+B,MALA,2CAAH,qDAQrBD,GAVC,CAaJ,GAAE,CAAC1B,IAGJH,QAAQC,IAAIkB,IAMR,UAACR,EAAD,YACI,SAACE,EAAD,CAAUmB,GAAE,UAAET,EAAiBU,eAAnB,QAA8B,IAA1C,sBAIA,UAAClB,EAAD,YACI,mDACA,UAACC,EAAD,YACI,yBACI,SAACC,EAAD,CAAce,GAAI,OAAlB,qBAEJ,yBACI,SAACf,EAAD,CAAce,GAAI,UAAlB,8BAOhB,SAAC,EAAAE,SAAD,CAAUC,UAAU,wCAApB,UACK,SAAC,KAAD,QA4BZ,C","sources":["components/movie-api.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst MOVIEKEY = process.env.REACT_APP_CAT_API_KEY;\n\nexport const getTrendingMovies = async () => {\n\n  try {\n    const res = await axios.get(\n      `trending/movie/day?`, {\n          params: {\n              api_key: MOVIEKEY,\n          }\n      }\n    );\n   return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport const getMoviesInfo = async (movieId) => {\n  try {\n    const res = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: MOVIEKEY,\n      }\n    });\n    return res;\n  \n  } catch (error) {\n    console.log('error', error);\n}\n}\n\n// 'https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1\n\nexport const getMovieSearch = async (search) => {\n  try {\n    const res = await axios.get(`search/movie`, {\n      params: {\n        api_key: MOVIEKEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return res;\n    \n  } catch (error) {\n      console.log('error', error);\n  }\n}\n\nexport const getCast = async (movieId) => {\n  try {\n    const res = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: MOVIEKEY,\n        language: 'en-US',\n      },\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport const getReviews = async (movieId) => {\n  try {\n    const res = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: MOVIEKEY,\n        language: 'en-US',\n        page: 1,\n      }\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const MainWrapper = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  color: #007bff;\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  font-size: 16px;\n`;\n\nexport const InfoBox = styled.div`\n  margin-top: 30px;\n  padding: 20px;\n  background-color: #f5f5f5;\n`;\n\nexport const InfoLinksList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin-top: 15px;\n\n  li {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const InfoItemLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  font-weight: bold;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;","import { useEffect, useState, useRef, Suspense} from \"react\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getMoviesInfo } from \"components/movie-api\";\nimport { MainWrapper, BackLink, InfoBox, InfoLinksList, InfoItemLink } from \"./MovieDetails.styled\";\n\n\nconst MovieDetails = () => {\n\n    const [movieDetails, setMovieDetails] = useState([]);\n    const location = useLocation();\n    const backLinkLocation = useRef(location.state?.from);\n    const { movieId } = useParams();\n   \n\n    useEffect(() => {\n        if(!movieId){\n            return;\n        }\n\n        const getMovieDetails = async () => {\n            const res = await getMoviesInfo(movieId);\n            if (res.data.length === 0) {\n                return;\n            }\n            setMovieDetails(res.data);\n        }\n        \n        getMovieDetails();\n\n\n    }, [movieId]);\n\n\n    console.log(movieDetails);\n    // console.log(location);\n    \n    \n    return (\n\n        <MainWrapper>\n            <BackLink to={backLinkLocation.current ?? '/'}>\n            Go back\n            </BackLink>\n\n            <InfoBox>\n                <p>Additional information</p>\n                <InfoLinksList>\n                    <li>\n                        <InfoItemLink to={'cast'}>Cast</InfoItemLink>\n                    </li>\n                    <li>\n                        <InfoItemLink to={'reviews'}>Reviews</InfoItemLink>\n                    </li>\n\n                </InfoLinksList>\n\n            </InfoBox>\n\n        <Suspense fallback={<div>Loading...</div>}>\n             <Outlet />\n         </Suspense>\n\n        </MainWrapper>\n\n\n\n    // <>\n    //   <h2>movieDetails: {movieId}</h2>\n    //   <Link to={backLinkLocation.current}>Назад к странице коллекции</Link>\n    //   {/* {location.state && location.state.from === location.state?.from} */}\n    //     <ul>\n    //         <li>\n    //             <Link to=\"subbreads\">Подпороды</Link>\n    //             {/* {state={{from: location.state.from}}} */}\n    //         </li>\n    //         <li>\n    //             <Link to=\"gallery\">Галлерея</Link>\n    //         </li>\n    //     </ul>\n    //     <Suspense fallback={<div>Loading...</div>}>\n    //         <Outlet />\n    //     </Suspense>\n    // </>\n    )\n\n    \n  \n}\n\nexport default MovieDetails;  "],"names":["axios","MOVIEKEY","process","getTrendingMovies","params","api_key","res","console","log","getMoviesInfo","movieId","getMovieSearch","search","language","query","include_adult","page","getCast","MainWrapper","styled","BackLink","Link","InfoBox","InfoLinksList","InfoItemLink","useState","movieDetails","setMovieDetails","location","useLocation","backLinkLocation","useRef","state","from","useParams","useEffect","getMovieDetails","data","length","to","current","Suspense","fallback"],"sourceRoot":""}