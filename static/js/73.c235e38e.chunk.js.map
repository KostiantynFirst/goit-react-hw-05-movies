{"version":3,"file":"static/js/73.c235e38e.chunk.js","mappings":"oRAEaA,EAAYC,EAAAA,GAAAA,IAAH,6EAKTC,EAAYD,EAAAA,GAAAA,IAAH,wGAOTE,EAAYF,EAAAA,GAAAA,IAAH,kRAcTG,EAAaH,EAAAA,GAAAA,IAAH,iJAQVI,EAAYJ,EAAAA,GAAAA,IAAH,0CAITK,EAAUL,EAAAA,GAAAA,IAAH,kLAUPM,EAAUN,EAAAA,GAAAA,IAAH,wF,SCepB,EA5Da,WAET,IAAOO,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAoBA,OAjBAC,EAAAA,EAAAA,YAAU,WACN,GAAIP,EAAJ,CAIA,IAAMQ,EAAc,mCAAG,qGACDC,EAAAA,EAAAA,IAAQT,GADP,OACbU,EADa,OAEnBN,EAAYM,EAAIC,KAAKC,MACrBC,QAAQC,IAAIJ,EAAIC,KAAKC,MACrBN,GAAW,GAJQ,2CAAH,qDAOpBE,GATC,CAWJ,GAAE,CAACR,KAIA,UAACR,EAAD,WACGa,IAAW,SAACX,EAAD,0BACVW,IACA,SAACX,EAAD,UACGS,EAASY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACZ,UAACxB,EAAD,WACGwB,GACC,SAACvB,EAAD,CACEwB,IAAG,yCAAoCD,GACvCE,IAAKH,KAGP,SAACpB,EAAD,wBAEF,UAACD,EAAD,YACE,0BACE,uCACCoB,MAEH,0BACE,kCACCC,UAhBSF,EADJ,MAwBjBX,GAA+B,IAApBF,EAASmB,SACnB,SAACvB,EAAD,yDAIX,C,sKC7DDwB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAWC,mCAEJC,EAAiB,mCAAG,6GAGXH,EAAAA,EAAAA,IAAA,sBACO,CACnBI,OAAQ,CACJC,QAASJ,KANU,cAGvBd,EAHuB,yBAUvBA,GAVuB,gCAY7BG,QAAQC,IAAI,QAAZ,MAZ6B,yDAAH,qDAgBjBe,EAAa,mCAAG,WAAO7B,GAAP,gGAEPuB,EAAAA,EAAAA,IAAA,gBAAmBvB,GAAW,CAC9C2B,OAAQ,CACNC,QAASJ,KAJY,cAEnBd,EAFmB,yBAOlBA,GAPkB,gCAUzBG,QAAQC,IAAI,QAAZ,MAVyB,yDAAH,sDAgBbgB,EAAc,mCAAG,WAAOC,GAAP,gGAERR,EAAAA,EAAAA,IAAA,eAA0B,CAC1CI,OAAQ,CACNC,QAASJ,EACTQ,SAAU,QACVC,MAAOF,EACPG,eAAe,EACfC,KAAM,KARgB,cAEpBzB,EAFoB,yBAWnBA,GAXmB,gCAcxBG,QAAQC,IAAI,QAAZ,MAdwB,yDAAH,sDAkBdL,EAAO,mCAAG,WAAOT,GAAP,gGAEDuB,EAAAA,EAAAA,IAAA,gBAAmBvB,EAAnB,YAAsC,CACtD2B,OAAQ,CACNC,QAASJ,EACTQ,SAAU,WALK,cAEbtB,EAFa,yBAQZA,GARY,gCAUnBG,QAAQC,IAAI,QAAZ,MAVmB,yDAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.js","components/movie-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  font-family: Arial, sans-serif;\n  padding: 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const ActorCard = styled.div`\n  width: 200px;\n  text-align: center;\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ActorImage = styled.img`\n  width: 100%;\n  height: 250px;\n  object-fit: cover;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\n\nexport const ActorInfo = styled.div`\n  padding: 16px;\n`;\n\nexport const NoImage = styled.div`\n  background-color: #ccc;\n  color: #fff;\n  padding: 10px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Message = styled.div`\n  text-align: center;\n  font-size: 18px;\n  margin-top: 20px;\n`;","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getCast } from \"components/movie-api\";\nimport { Container, MovieInfo, ActorCard, ActorImage, ActorInfo, NoImage, Message } from \"./Cast.styled\";\n\nconst Cast = () => {\n\n    const {movieId} = useParams();\n    const [castData, setCastData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n\n    useEffect(() => {\n        if(!movieId) {\n            return;\n        }\n\n        const getCastDetails = async () => {\n            const res = await getCast(movieId);\n            setCastData(res.data.cast);\n            console.log(res.data.cast);\n            setLoading(false);\n        }\n\n        getCastDetails();\n\n    }, [movieId]);\n\n\n    return (\n        <Container>\n          {loading && <MovieInfo>Loading...</MovieInfo>}\n          {!loading && (\n            <MovieInfo>\n              {castData.map(({ id, character, name, profile_path }) => (\n                <ActorCard key={id}>\n                  {profile_path ? (\n                    <ActorImage\n                      src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                      alt={name}\n                    />\n                  ) : (\n                    <NoImage>No image</NoImage>\n                  )}\n                  <ActorInfo>\n                    <p>\n                      <b>Character: </b>\n                      {character}\n                    </p>\n                    <p>\n                      <b>Name: </b>\n                      {name}\n                    </p>\n                  </ActorInfo>\n                </ActorCard>\n              ))}\n            </MovieInfo>\n          )}\n          {loading && castData.length === 0 && (\n            <Message>We don't have information for this movie</Message>\n          )}\n        </Container>\n      );\n};\n\nexport default Cast;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst MOVIEKEY = process.env.REACT_APP_CAT_API_KEY;\n\nexport const getTrendingMovies = async () => {\n\n  try {\n    const res = await axios.get(\n      `trending/movie/day?`, {\n          params: {\n              api_key: MOVIEKEY,\n          }\n      }\n    );\n   return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport const getMoviesInfo = async (movieId) => {\n  try {\n    const res = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: MOVIEKEY,\n      }\n    });\n    return res;\n  \n  } catch (error) {\n    console.log('error', error);\n}\n}\n\n// 'https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1\n\nexport const getMovieSearch = async (search) => {\n  try {\n    const res = await axios.get(`search/movie`, {\n      params: {\n        api_key: MOVIEKEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return res;\n    \n  } catch (error) {\n      console.log('error', error);\n  }\n}\n\nexport const getCast = async (movieId) => {\n  try {\n    const res = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: MOVIEKEY,\n        language: 'en-US',\n      },\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport const getReviews = async (movieId) => {\n  try {\n    const res = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: MOVIEKEY,\n        language: 'en-US',\n        page: 1,\n      }\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}"],"names":["Container","styled","MovieInfo","ActorCard","ActorImage","ActorInfo","NoImage","Message","movieId","useParams","useState","castData","setCastData","loading","setLoading","useEffect","getCastDetails","getCast","res","data","cast","console","log","map","id","character","name","profile_path","src","alt","length","axios","MOVIEKEY","process","getTrendingMovies","params","api_key","getMoviesInfo","getMovieSearch","search","language","query","include_adult","page"],"sourceRoot":""}