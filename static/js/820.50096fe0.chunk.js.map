{"version":3,"file":"static/js/820.50096fe0.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAWC,mCAEJC,EAAiB,mCAAG,6GAGXH,EAAAA,EAAAA,IAAA,sBACO,CACnBI,OAAQ,CACJC,QAASJ,KANU,cAGvBK,EAHuB,yBAUvBA,GAVuB,gCAY7BC,QAAQC,IAAI,QAAZ,MAZ6B,yDAAH,qDAgBjBC,EAAa,mCAAG,WAAOC,GAAP,gGAEPV,EAAAA,EAAAA,IAAA,gBAAmBU,GAAW,CAC9CN,OAAQ,CACNC,QAASJ,KAJY,cAEnBK,EAFmB,yBAOlBA,GAPkB,gCAUzBC,QAAQC,IAAI,QAAZ,MAVyB,yDAAH,sDAgBbG,EAAc,mCAAG,WAAOC,GAAP,gGAERZ,EAAAA,EAAAA,IAAA,eAA0B,CAC1CI,OAAQ,CACNC,QAASJ,EACTY,SAAU,QACVC,MAAOF,EACPG,eAAe,EACfC,KAAM,KARgB,cAEpBV,EAFoB,yBAWnBA,GAXmB,gCAcxBC,QAAQC,IAAI,QAAZ,MAdwB,yDAAH,sDAkBdS,EAAO,mCAAG,WAAOP,GAAP,gGAEDV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,YAAsC,CACtDN,OAAQ,CACNC,QAASJ,EACTY,SAAU,WALK,cAEbP,EAFa,yBAQZA,GARY,gCAUnBC,QAAQC,IAAI,QAAZ,MAVmB,yDAAH,sDAcPU,EAAU,mCAAG,WAAOR,GAAP,gGAEJV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,YAAsC,CACtDN,OAAQ,CACNC,QAASJ,EACTY,SAAU,QACVG,KAAM,KANY,cAEhBV,EAFgB,yBASfA,GATe,gCAWtBC,QAAQC,IAAI,QAAZ,MAXsB,yDAAH,qD,iKClEVW,EAAiBC,EAAAA,GAAAA,IAAH,kMASdC,EAAeD,EAAAA,GAAAA,GAAH,wKASZE,EAAYF,EAAAA,GAAAA,GAAH,sNAUTG,EAAYH,EAAAA,GAAAA,GAAH,4JAQTI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,iJ,SCCvB,EApCa,WAET,OAA4CM,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAEV,IAAMC,EAAS,mCAAG,gHAES3B,EAAAA,EAAAA,MAFT,OAEHG,EAFG,QAGJyB,EAASzB,EAAI0B,KAAKC,UAGpBL,EAAkBG,GANZ,gDASVxB,QAAQ2B,MAAM,wBAAd,MATU,yDAAH,qDAaXJ,GACH,GAAE,KAGC,UAACX,EAAD,YACI,SAACE,EAAD,8BACA,SAACC,EAAD,UACKK,EAAeQ,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OAChB,SAACd,EAAD,WACI,SAACC,EAAD,CAAYc,GAAE,iBAAYF,GAA1B,SAA0CC,GAALD,IADzBA,EADA,QAQnC,C","sources":["components/movie-api.js","pages/Home/Home.styled.jsx","pages/Home/Home.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst MOVIEKEY = process.env.REACT_APP_CAT_API_KEY;\n\nexport const getTrendingMovies = async () => {\n\n  try {\n    const res = await axios.get(\n      `trending/movie/day?`, {\n          params: {\n              api_key: MOVIEKEY,\n          }\n      }\n    );\n   return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport const getMoviesInfo = async (movieId) => {\n  try {\n    const res = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: MOVIEKEY,\n      }\n    });\n    return res;\n  \n  } catch (error) {\n    console.log('error', error);\n}\n}\n\n// 'https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1\n\nexport const getMovieSearch = async (search) => {\n  try {\n    const res = await axios.get(`search/movie`, {\n      params: {\n        api_key: MOVIEKEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return res;\n    \n  } catch (error) {\n      console.log('error', error);\n  }\n}\n\nexport const getCast = async (movieId) => {\n  try {\n    const res = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: MOVIEKEY,\n        language: 'en-US',\n      },\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport const getReviews = async (movieId) => {\n  try {\n    const res = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: MOVIEKEY,\n        language: 'en-US',\n        page: 1,\n      }\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieContainer = styled.div`\n    font-family: Arial, sans-serif;\n    background-color: #f0f0f0;\n    /* max-width: 1000px; */\n    /* text-align: center; */\n    margin: 0;\n    padding-top: 10px;\n`;\n\nexport const MovieHeading = styled.h1`\n    font-size: 24px;\n    font-weight: bold;\n    text-align: center;\n    margin-bottom: 20px;\n    /* margin-top: 20px; */\n    color: #333;\n`  \n\nexport const MovieList = styled.ul`\n    width: 80%;\n    margin: 20px auto;\n    list-style-type: none;\n    background-color: #fff;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n`;\n\nexport const MovieItem = styled.li`\n    margin-bottom: 15px;\n    padding: 10px;\n    border-radius: 5px;\n    background-color: #f5f5f5;\n    border: 1px solid #ccc;\n`;\n\nexport const MovieTitle = styled(Link)`\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 5px;\n    text-decoration: none; \n    color: inherit;\n`;","import { useEffect, useState } from \"react\";\nimport { getTrendingMovies } from \"components/movie-api\";\nimport { MovieList, MovieItem, MovieContainer, MovieTitle, MovieHeading} from \"./Home.styled\";\n\nconst Home = () => {\n\n    const [trandingMovies, setTrandingMovies] = useState([]);\n\n    useEffect(() => {\n\n    const fetchData = async () => {\n        try {\n            const  res = await getTrendingMovies();\n            const movies = res.data.results;\n            // console.log(movies);\n            if (movies) {\n                setTrandingMovies(movies);\n                }\n        } catch (error) {\n            console.error(\"Error receiving data:\", error);\n        } \n\n    };\n        fetchData();\n    }, [])\n\n    return (\n        <MovieContainer>\n            <MovieHeading>Trending today</MovieHeading>\n            <MovieList>\n                {trandingMovies.map(({id, title}) => (\n                    <MovieItem key={id}>\n                        <MovieTitle to={`movies/${id}`} key={id}>{title}</MovieTitle>\n                    </MovieItem>\n                ))} \n            </MovieList>\n        </MovieContainer>\n    );\n};\n\nexport default Home;"],"names":["axios","MOVIEKEY","process","getTrendingMovies","params","api_key","res","console","log","getMoviesInfo","movieId","getMovieSearch","search","language","query","include_adult","page","getCast","getReviews","MovieContainer","styled","MovieHeading","MovieList","MovieItem","MovieTitle","Link","useState","trandingMovies","setTrandingMovies","useEffect","fetchData","movies","data","results","error","map","id","title","to"],"sourceRoot":""}